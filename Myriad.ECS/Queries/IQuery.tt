<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

namespace Myriad.ECS.Queries;

public interface IQuery;

<# for (var i = 0; i < 9; i++)
{
	for (var j = 0; j < 9; j++)
	{
		if (i + j == 0)
			continue;
#>
public interface <#= Name(i, j) #><<#= string.Join(", ", Enumerable.Range(0, i + j).Select(x => "T" + x)) #>>
    : IQuery
{
	void Execute(Entity e, <#= Refs(0, i, j > 0) #><#= Ins(i, j) #>);
}

<#
	}
}
#>


<#+ 
	static string Name(int mutable, int @readonly)
	{
		return "IQuery" + new string('W', mutable) + new string('R', @readonly);
	}

	static string Refs(int start, int count, bool comma)
	{
		var str = string.Join(
			", ",
			Enumerable.Range(start, count).Select(x => $"ref T{x} t{x}")
		);

		if (count > 0 && comma)
			str += ", ";

		return str;
	}

	static string Ins(int start, int count)
	{
		return string.Join(
			", ",
			Enumerable.Range(start, count).Select(x => $"in T{x} t{x}")
		);
	}
#>