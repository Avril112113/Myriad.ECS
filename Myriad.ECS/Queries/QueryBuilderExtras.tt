<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
	const int PARAM_COUNT = 16;
#>
using System.Diagnostics.CodeAnalysis;

// ReSharper disable UnusedType.Global
// ReSharper disable UnusedParameter.Global
// ReSharper disable LoopCanBeConvertedToQuery
// ReSharper disable ConvertToPrimaryConstructor

namespace Myriad.ECS.Queries;

public sealed partial class QueryBuilder
{

<# for (var i = 2; i <= PARAM_COUNT; i++)
{
	var type_params = string.Join(", ", Enumerable.Range(0, i).Select(x => "T" + x));
#>
	/// <summary>
	/// Include only entities which have all of these components
	/// </summary>
	/// <returns>The query builder</returns>
	[ExcludeFromCodeCoverage]
	public QueryBuilder Include<<#= type_params #>>()
<# for (var j = 0; j < i; j++)
{
#>
		where <#= "T" + j #> : IComponent
<#
}
#>
	{
<# for (var j = 0; j < i; j++)
{
#>
		Include<<#= "T" + j #>>();
<#
}
#>

		return this;
	}

<#
}
#>

<# for (var i = 2; i <= PARAM_COUNT; i++)
{
	var type_params = string.Join(", ", Enumerable.Range(0, i).Select(x => "T" + x));
#>
	/// <summary>
	/// Exclude entities which have any of these components
	/// </summary>
	/// <returns>The query builder</returns>
	[ExcludeFromCodeCoverage]
	public QueryBuilder Exclude<<#= type_params #>>()
<# for (var j = 0; j < i; j++)
{
#>
		where <#= "T" + j #> : IComponent
<#
}
#>
	{
<# for (var j = 0; j < i; j++)
{
#>
		Exclude<<#= "T" + j #>>();
<#
}
#>

		return this;
	}

<#
}
#>

}